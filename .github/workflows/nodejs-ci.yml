name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: MediOnco_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Wait for PostgreSQL to start
        run: until pg_isready -h localhost -p 5432; do sleep 1; done

      - name: Print environment variables for debugging
        run: |
          echo "Database User: ${{ env.POSTGRES_USER }}"
          echo "Database Password: ${{ secrets.POSTGRES_PASSWORD }}"
          echo "Database: ${{ env.POSTGRES_DB }}"
          echo "Host: localhost"
          echo "Port: 5432"
          
      - name: Run Database Migrations
        env:
          PGPASSWORD: admin
        run: |
          psql -h localhost -U admin -d MediOnco_db -a -f migrations/001-init-schema.sql
          psql -h localhost -U admin -d MediOnco_db -a -f migrations/002-seed-data.sql

      - name: Print PostgreSQL service logs (Optional - for debugging)
        if: failure() # Only if previous steps failed
        run: docker logs ${{ job.services.postgres.id }}

      - name: Run Tests
        env:
          DB_USER: admin
          DB_PASSWORD: admin
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: MediOnco_db
          JWT_SECRET: bee2413d8647b85cb2540c30f746a434236cb6bed812c5e8109b94b4597073d4
        run: npm test
